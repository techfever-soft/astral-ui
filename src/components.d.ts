/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AstralThemeColor } from "./utils/types/theme.types";
import { AstralThemeColor as AstralThemeColor1 } from "./components";
export { AstralThemeColor } from "./utils/types/theme.types";
export { AstralThemeColor as AstralThemeColor1 } from "./components";
export namespace Components {
    interface AstralAccordion {
        "color": AstralThemeColor;
        "multiple": boolean;
        "openedIndex": number;
    }
    interface AstralAccordionPanel {
        "index": number;
        "opened": boolean;
        "raised": boolean;
        "stroked": boolean;
    }
    interface AstralBreadcrumb {
        "color": AstralThemeColor1;
        "separator": string;
    }
    interface AstralBreadcrumbItem {
        "active": boolean;
        "color"?: AstralThemeColor1;
        "disabled": boolean;
        "href"?: string;
        "separatorContent": string;
    }
    interface AstralButton {
        "color": AstralThemeColor;
        "disabled": boolean;
        "extendedfab": boolean;
        "fab": boolean;
        "icon": boolean;
        "raised": boolean;
        "stroked": boolean;
    }
    interface AstralCheckbox {
        "checked": boolean;
        "color": AstralThemeColor1;
        "indeterminate": boolean;
    }
    interface AstralContainer {
        "align": 'start' | 'center' | 'end';
        "direction": 'row' | 'column';
        "justify": 'start' | 'center' | 'space-between' | 'space-around';
        "padding": string;
        "spacing": string;
        "wrap": 'nowrap' | 'wrap';
    }
    interface AstralDivider {
    }
    interface AstralGrid {
        "align": 'start' | 'center' | 'end';
        "columns": number;
        "direction": 'row' | 'column';
        "justify": 'start' | 'center' | 'space-between' | 'space-around';
        "spacing": string;
    }
    interface AstralGridItem {
    }
    interface AstralIcon {
        "fontSet": 'material' | 'font-awesome';
        "name": string;
    }
    interface AstralItem {
        "basis": string;
        "flex": string;
        "grow": number;
        "shrink": number;
    }
    interface AstralLayout {
    }
    interface AstralModal {
        "close": () => Promise<void>;
        "modalId": string;
        "open": () => Promise<void>;
    }
    interface AstralNavBar {
    }
    interface AstralNavDrawer {
    }
    interface AstralNavRail {
        "color": string;
    }
    interface AstralNavRailItem {
        "fontSet": 'material' | 'font-awesome';
        "icon": string;
        "label": string;
    }
    interface AstralPane {
        "raised": boolean;
        "stroked": boolean;
    }
}
declare global {
    interface HTMLAstralAccordionElement extends Components.AstralAccordion, HTMLStencilElement {
    }
    var HTMLAstralAccordionElement: {
        prototype: HTMLAstralAccordionElement;
        new (): HTMLAstralAccordionElement;
    };
    interface HTMLAstralAccordionPanelElement extends Components.AstralAccordionPanel, HTMLStencilElement {
    }
    var HTMLAstralAccordionPanelElement: {
        prototype: HTMLAstralAccordionPanelElement;
        new (): HTMLAstralAccordionPanelElement;
    };
    interface HTMLAstralBreadcrumbElement extends Components.AstralBreadcrumb, HTMLStencilElement {
    }
    var HTMLAstralBreadcrumbElement: {
        prototype: HTMLAstralBreadcrumbElement;
        new (): HTMLAstralBreadcrumbElement;
    };
    interface HTMLAstralBreadcrumbItemElement extends Components.AstralBreadcrumbItem, HTMLStencilElement {
    }
    var HTMLAstralBreadcrumbItemElement: {
        prototype: HTMLAstralBreadcrumbItemElement;
        new (): HTMLAstralBreadcrumbItemElement;
    };
    interface HTMLAstralButtonElement extends Components.AstralButton, HTMLStencilElement {
    }
    var HTMLAstralButtonElement: {
        prototype: HTMLAstralButtonElement;
        new (): HTMLAstralButtonElement;
    };
    interface HTMLAstralCheckboxElement extends Components.AstralCheckbox, HTMLStencilElement {
    }
    var HTMLAstralCheckboxElement: {
        prototype: HTMLAstralCheckboxElement;
        new (): HTMLAstralCheckboxElement;
    };
    interface HTMLAstralContainerElement extends Components.AstralContainer, HTMLStencilElement {
    }
    var HTMLAstralContainerElement: {
        prototype: HTMLAstralContainerElement;
        new (): HTMLAstralContainerElement;
    };
    interface HTMLAstralDividerElement extends Components.AstralDivider, HTMLStencilElement {
    }
    var HTMLAstralDividerElement: {
        prototype: HTMLAstralDividerElement;
        new (): HTMLAstralDividerElement;
    };
    interface HTMLAstralGridElement extends Components.AstralGrid, HTMLStencilElement {
    }
    var HTMLAstralGridElement: {
        prototype: HTMLAstralGridElement;
        new (): HTMLAstralGridElement;
    };
    interface HTMLAstralGridItemElement extends Components.AstralGridItem, HTMLStencilElement {
    }
    var HTMLAstralGridItemElement: {
        prototype: HTMLAstralGridItemElement;
        new (): HTMLAstralGridItemElement;
    };
    interface HTMLAstralIconElement extends Components.AstralIcon, HTMLStencilElement {
    }
    var HTMLAstralIconElement: {
        prototype: HTMLAstralIconElement;
        new (): HTMLAstralIconElement;
    };
    interface HTMLAstralItemElement extends Components.AstralItem, HTMLStencilElement {
    }
    var HTMLAstralItemElement: {
        prototype: HTMLAstralItemElement;
        new (): HTMLAstralItemElement;
    };
    interface HTMLAstralLayoutElement extends Components.AstralLayout, HTMLStencilElement {
    }
    var HTMLAstralLayoutElement: {
        prototype: HTMLAstralLayoutElement;
        new (): HTMLAstralLayoutElement;
    };
    interface HTMLAstralModalElement extends Components.AstralModal, HTMLStencilElement {
    }
    var HTMLAstralModalElement: {
        prototype: HTMLAstralModalElement;
        new (): HTMLAstralModalElement;
    };
    interface HTMLAstralNavBarElement extends Components.AstralNavBar, HTMLStencilElement {
    }
    var HTMLAstralNavBarElement: {
        prototype: HTMLAstralNavBarElement;
        new (): HTMLAstralNavBarElement;
    };
    interface HTMLAstralNavDrawerElement extends Components.AstralNavDrawer, HTMLStencilElement {
    }
    var HTMLAstralNavDrawerElement: {
        prototype: HTMLAstralNavDrawerElement;
        new (): HTMLAstralNavDrawerElement;
    };
    interface HTMLAstralNavRailElement extends Components.AstralNavRail, HTMLStencilElement {
    }
    var HTMLAstralNavRailElement: {
        prototype: HTMLAstralNavRailElement;
        new (): HTMLAstralNavRailElement;
    };
    interface HTMLAstralNavRailItemElement extends Components.AstralNavRailItem, HTMLStencilElement {
    }
    var HTMLAstralNavRailItemElement: {
        prototype: HTMLAstralNavRailItemElement;
        new (): HTMLAstralNavRailItemElement;
    };
    interface HTMLAstralPaneElement extends Components.AstralPane, HTMLStencilElement {
    }
    var HTMLAstralPaneElement: {
        prototype: HTMLAstralPaneElement;
        new (): HTMLAstralPaneElement;
    };
    interface HTMLElementTagNameMap {
        "astral-accordion": HTMLAstralAccordionElement;
        "astral-accordion-panel": HTMLAstralAccordionPanelElement;
        "astral-breadcrumb": HTMLAstralBreadcrumbElement;
        "astral-breadcrumb-item": HTMLAstralBreadcrumbItemElement;
        "astral-button": HTMLAstralButtonElement;
        "astral-checkbox": HTMLAstralCheckboxElement;
        "astral-container": HTMLAstralContainerElement;
        "astral-divider": HTMLAstralDividerElement;
        "astral-grid": HTMLAstralGridElement;
        "astral-grid-item": HTMLAstralGridItemElement;
        "astral-icon": HTMLAstralIconElement;
        "astral-item": HTMLAstralItemElement;
        "astral-layout": HTMLAstralLayoutElement;
        "astral-modal": HTMLAstralModalElement;
        "astral-nav-bar": HTMLAstralNavBarElement;
        "astral-nav-drawer": HTMLAstralNavDrawerElement;
        "astral-nav-rail": HTMLAstralNavRailElement;
        "astral-nav-rail-item": HTMLAstralNavRailItemElement;
        "astral-pane": HTMLAstralPaneElement;
    }
}
declare namespace LocalJSX {
    interface AstralAccordion {
        "color"?: AstralThemeColor;
        "multiple"?: boolean;
        "openedIndex"?: number;
    }
    interface AstralAccordionPanel {
        "index"?: number;
        "opened"?: boolean;
        "raised"?: boolean;
        "stroked"?: boolean;
    }
    interface AstralBreadcrumb {
        "color"?: AstralThemeColor1;
        "separator"?: string;
    }
    interface AstralBreadcrumbItem {
        "active"?: boolean;
        "color"?: AstralThemeColor1;
        "disabled"?: boolean;
        "href"?: string;
        "separatorContent"?: string;
    }
    interface AstralButton {
        "color"?: AstralThemeColor;
        "disabled"?: boolean;
        "extendedfab"?: boolean;
        "fab"?: boolean;
        "icon"?: boolean;
        "raised"?: boolean;
        "stroked"?: boolean;
    }
    interface AstralCheckbox {
        "checked"?: boolean;
        "color"?: AstralThemeColor1;
        "indeterminate"?: boolean;
    }
    interface AstralContainer {
        "align"?: 'start' | 'center' | 'end';
        "direction"?: 'row' | 'column';
        "justify"?: 'start' | 'center' | 'space-between' | 'space-around';
        "padding"?: string;
        "spacing"?: string;
        "wrap"?: 'nowrap' | 'wrap';
    }
    interface AstralDivider {
    }
    interface AstralGrid {
        "align"?: 'start' | 'center' | 'end';
        "columns"?: number;
        "direction"?: 'row' | 'column';
        "justify"?: 'start' | 'center' | 'space-between' | 'space-around';
        "spacing"?: string;
    }
    interface AstralGridItem {
    }
    interface AstralIcon {
        "fontSet"?: 'material' | 'font-awesome';
        "name"?: string;
    }
    interface AstralItem {
        "basis"?: string;
        "flex"?: string;
        "grow"?: number;
        "shrink"?: number;
    }
    interface AstralLayout {
    }
    interface AstralModal {
        "modalId"?: string;
    }
    interface AstralNavBar {
    }
    interface AstralNavDrawer {
    }
    interface AstralNavRail {
        "color"?: string;
    }
    interface AstralNavRailItem {
        "fontSet"?: 'material' | 'font-awesome';
        "icon"?: string;
        "label"?: string;
    }
    interface AstralPane {
        "raised"?: boolean;
        "stroked"?: boolean;
    }
    interface IntrinsicElements {
        "astral-accordion": AstralAccordion;
        "astral-accordion-panel": AstralAccordionPanel;
        "astral-breadcrumb": AstralBreadcrumb;
        "astral-breadcrumb-item": AstralBreadcrumbItem;
        "astral-button": AstralButton;
        "astral-checkbox": AstralCheckbox;
        "astral-container": AstralContainer;
        "astral-divider": AstralDivider;
        "astral-grid": AstralGrid;
        "astral-grid-item": AstralGridItem;
        "astral-icon": AstralIcon;
        "astral-item": AstralItem;
        "astral-layout": AstralLayout;
        "astral-modal": AstralModal;
        "astral-nav-bar": AstralNavBar;
        "astral-nav-drawer": AstralNavDrawer;
        "astral-nav-rail": AstralNavRail;
        "astral-nav-rail-item": AstralNavRailItem;
        "astral-pane": AstralPane;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "astral-accordion": LocalJSX.AstralAccordion & JSXBase.HTMLAttributes<HTMLAstralAccordionElement>;
            "astral-accordion-panel": LocalJSX.AstralAccordionPanel & JSXBase.HTMLAttributes<HTMLAstralAccordionPanelElement>;
            "astral-breadcrumb": LocalJSX.AstralBreadcrumb & JSXBase.HTMLAttributes<HTMLAstralBreadcrumbElement>;
            "astral-breadcrumb-item": LocalJSX.AstralBreadcrumbItem & JSXBase.HTMLAttributes<HTMLAstralBreadcrumbItemElement>;
            "astral-button": LocalJSX.AstralButton & JSXBase.HTMLAttributes<HTMLAstralButtonElement>;
            "astral-checkbox": LocalJSX.AstralCheckbox & JSXBase.HTMLAttributes<HTMLAstralCheckboxElement>;
            "astral-container": LocalJSX.AstralContainer & JSXBase.HTMLAttributes<HTMLAstralContainerElement>;
            "astral-divider": LocalJSX.AstralDivider & JSXBase.HTMLAttributes<HTMLAstralDividerElement>;
            "astral-grid": LocalJSX.AstralGrid & JSXBase.HTMLAttributes<HTMLAstralGridElement>;
            "astral-grid-item": LocalJSX.AstralGridItem & JSXBase.HTMLAttributes<HTMLAstralGridItemElement>;
            "astral-icon": LocalJSX.AstralIcon & JSXBase.HTMLAttributes<HTMLAstralIconElement>;
            "astral-item": LocalJSX.AstralItem & JSXBase.HTMLAttributes<HTMLAstralItemElement>;
            "astral-layout": LocalJSX.AstralLayout & JSXBase.HTMLAttributes<HTMLAstralLayoutElement>;
            "astral-modal": LocalJSX.AstralModal & JSXBase.HTMLAttributes<HTMLAstralModalElement>;
            "astral-nav-bar": LocalJSX.AstralNavBar & JSXBase.HTMLAttributes<HTMLAstralNavBarElement>;
            "astral-nav-drawer": LocalJSX.AstralNavDrawer & JSXBase.HTMLAttributes<HTMLAstralNavDrawerElement>;
            "astral-nav-rail": LocalJSX.AstralNavRail & JSXBase.HTMLAttributes<HTMLAstralNavRailElement>;
            "astral-nav-rail-item": LocalJSX.AstralNavRailItem & JSXBase.HTMLAttributes<HTMLAstralNavRailItemElement>;
            "astral-pane": LocalJSX.AstralPane & JSXBase.HTMLAttributes<HTMLAstralPaneElement>;
        }
    }
}

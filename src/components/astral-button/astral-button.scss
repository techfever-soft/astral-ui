@use '@material/ripple';
@use '../../global/scss/functions/check-contrast.scss' as *;

astral-button {
  display: inline-block;

  button {
    overflow: hidden;
    position: relative;
    display: flex;
    align-items: center;
    font-family: var(--astral-primary-font);
    padding: 10px 25px;
    border-radius: 25px;
    border: none;
    font-weight: bolder;
    text-transform: uppercase;
    cursor: pointer;
    background: transparent;
    color: rgba(var(--astral-text-color));

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states-base-color(var(--astral-text-color));
    @include ripple.states-opacities(
      (
        hover: 0.1,
        focus: 0.3,
        press: 0.4,
      )
    );

    &[color='primary'] {
      background: rgba(var(--astral-primary-color));
      color: rgba(var(--astral-primary-contrast-color));
      @include ripple.states-base-color(rgba(var(--astral-primary-contrast-color)));
    }
    &[color='secondary'] {
      background: rgba(var(--astral-secondary-color));
      color: rgba(var(--astral-secondary-contrast-color));
      @include ripple.states-base-color(rgba(var(--astral-secondary-contrast-color)));
    }
    &[color='success'] {
      background: rgba(var(--astral-success-color));
      color: rgba(var(--astral-success-contrast-color));
      @include ripple.states-base-color(rgba(var(--astral-success-contrast-color)));
    }
    &[color='warning'] {
      background: rgba(var(--astral-warning-color));
      color: rgba(var(--astral-warning-contrast-color));
      @include ripple.states-base-color(rgba(var(--astral-warning-contrast-color)));
    }

    &[stroked] {
      background: transparent;
      border: 1px solid var(--astral-text-color);
      color: var(--astral-text-color);

      &[color='primary'] {
        color: rgba(var(--astral-primary-color));
        border: 1px solid rgba(var(--astral-primary-color));
        @include ripple.states-base-color(rgba(var(--astral-primary-color)));
      }
      &[color='secondary'] {
        color: rgba(var(--astral-secondary-color));
        border: 1px solid var(--astral-secondary-color);
        @include ripple.states-base-color(rgba(var(--astral-secondary-color)));
      }
      &[color='success'] {
        color: rgba(var(--astral-success-color));
        border: 1px solid rgba(var(--astral-success-color));
        @include ripple.states-base-color(rgba(var(--astral-success-color)));
      }
      &[color='warning'] {
        color: rgba(var(--astral-warning-color));
        border: 1px solid rgba(var(--astral-warning-color));
        @include ripple.states-base-color(rgba(var(--astral-warning-color)));
      }
    }

    &[raised] {
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      &:active {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.25);
      }
    }

    &[icon] {
      padding: 10px;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      justify-content: center;
      align-items: center;
      i,
      svg,
      astral-icon {
        margin: 0;
      }
    }

    &[fab] {
      border-radius: 15px;
      width: 50px;
      height: 50px;
      display: flex;
      justify-content: center;
      align-items: center;
      i,
      svg,
      astral-icon {
        margin: 0;
      }
    }

    &[extendedfab] {
      border-radius: 15px;
      min-width: 50px;
      height: 50px;
      padding: 12.5px;
      display: flex;
      justify-content: center;
      align-items: center;

      i,
      svg,
      astral-icon {
        margin-right: 10px;
      }
    }

    &[disabled] {
      cursor: not-allowed;
      opacity: 0.5;
      pointer-events: none;
    }

    i,
    svg,
    astral-icon {
      margin-right: 10px;
    }
  }
}
